# Use the official Python base image with the latest tag
FROM python:3.13-slim 

# #Install sudo for apt-get access
RUN apt-get update && apt-get install -y \
    sudo  wget \
    && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && sudo apt install -y  ./google-chrome-stable_current_amd64.deb \
    && rm -rf /var/lib/apt/lists/*  ./google-chrome-stable_current_amd64.deb

# # Replace deb.debian.org URLs with archive.debian.org in sources.list
# # Disable valid-until check and allow insecure archive repository for apt
# RUN sed -i 's|http://deb.debian.org/debian|http://archive.debian.org/debian|g' /etc/apt/sources.list \
#  && sed -i 's|http://deb.debian.org/debian-security|http://archive.debian.org/debian-security|g' /etc/apt/sources.list \
#  && echo 'Acquire::Check-Valid-Until "false";' > /etc/apt/apt.conf.d/99archive \
#  && echo 'Acquire::AllowInsecureRepositories "true";' >> /etc/apt/apt.conf.d/99archive \
#  && apt-get update



 # Install dependencies
# RUN apt-get update && \
#     apt-get install -y sudo wget && \
#     wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.buster_amd64.deb && \
#     apt install -y ./wkhtmltox_0.12.5-1.buster_amd64.deb && \
#     rm -rf /var/lib/apt/lists/* wkhtmltox_0.12.5-1.buster_amd64.deb


USER worker
    
# Set the working directory inside the container
WORKDIR /app

# Copy requirements.txt to the working directory
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt



RUN DEST_DIR="/usr/share/fonts/segoeui" && \
    mkdir -p "$DEST_DIR" && \
    VARIANTS='segoeui segoeuib segoeuii segoeuiz segoeuil seguili segoeuisl seguisli seguisb seguisbi seguibl seguibli seguiemj seguisym seguihis' && \
    for VARIANT in $VARIANTS; do \
      wget --no-clobber "https://github.com/mrbvrz/segoe-ui/raw/master/font/${VARIANT}.ttf" -O "${DEST_DIR}/${VARIANT}.ttf"; \
    done && \
    fc-cache -fv


# Copy the rest of your application code into the working directory
COPY src /app/src

# Expose the port that FastAPI will run on
EXPOSE 8000

# Command to run the FastAPI app using uvicorn
CMD ["uvicorn", "src.ImageGenerator_chrome:app", "--host", "0.0.0.0", "--port", "8000"]

